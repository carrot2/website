<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet href="xsl/page.xsl" type="text/xsl" ?>

<page section="faq">
  <heading>FAQ</heading>

  <content>
    <div class="qa">
      <div class="q">Can I use Carrot<sup>2</sup> in a commercial project?</div>
      <div class="a">
        Yes. The only requirement is that you properly acknowledge the use of
        Carrot<sup>2</sup> (on the project's website and documentation) and let
        us know about your project. Please also remember to read the <a
        content="license">license</a>.
      </div>
    </div>

    <div class="qa">
      <div class="q">Can Carrot<sup>2</sup> crawl my website?</div>
      <div class="a">
        No. Carrot<sup>2</sup> can add clustering of search results to an
        existing search engine. You can use an Open Source project called <a
        href="http://www.nutch.org">Nutch</a> to crawl your website. Nutch has
        a Carrot<sup>2</sup>-based search clustering plugin, so you'll get all
        crawling, searching and clustering in one piece. If you need help
        with any of these, please <a content="support">contact us</a>.
      </div>
    </div>
    
    <div class="qa">
      <div class="q">How can I integrate Carrot<sup>2</sup> with my Web site/ software?</div>
      <div class="a">
        <p>
        Such an integration depends on what existing infrastructure is already available in your project. Carrot<sup>2</sup>
        requires a <emph>feed</emph> of documents (search results), so typically you'll need a search engine
        that crawls your site. Such an engine can be indeed local to your Web site (proprietary solutions in intranets, 
        search engines built on top of <a href="http://lucene.apache.org/nutch/">Nutch</a> or <a href="http://www.htdig.org/">ht://dig</a>),
        but it can as well be a global search engine with searches restricted to your domain (Google, Yahoo).
        </p>
        
        <p>
        Once a search engine is available, the integration depends on the
        technology your site/ software uses for rendering the user interface
        (or more accurately: for implementing application logic). Software
        written in Java can use Carrot<sup>2</sup> directly in a way that is
        shown in the end-to-end <carrot2-source-link extension="/applications/carrot2-demo-api-example/src/org/carrot2/apiexample/Example.java">example
        code</carrot2-source-link> (<carrot2-api-link extension="/org/carrot2/apiexample/Example.html">JavaDoc</carrot2-api-link>).
        Sites written in Perl, PHP, .NET and other languages can utilize
        different forms of data exchange available for Carrot<sup>2</sup>:
        SOAP, XML-RPC and even plain HTTP POST that accepts and returns data
        encoded in XML. Finally, in some cases you might want to re-use and
        customize (through XSLT) some bits of Carrot<sup>2</sup>'s <carrot2-webapp-link>web
        application</carrot2-webapp-link> (located in the <carrot2-source-link dir="true" extension="/applications/carrot2-demo-webapp/"><span
        class="c2element">carrot2/applications/carrot2-demo-webapp</span></carrot2-source-link>
        folder of the source repository) to e.g. visualize clusters.
        </p>
        
        <p>
        Note that Carrot<sup>2</sup> integration requires some Java development
        skills and familiarity with Java development tools (Eclipse, Apache
        ANT). The example code and JUnit tests available in the open source project demonstrate
        various ways of using Carrot<sup>2</sup>. The project's <a
        href="http://lists.sourceforge.net/lists/listinfo/carrot2-developers">mailing
        list</a> can also be of some help if you get stuck someplace.
        We have also prepared a step-by-step example of using the Carrot<sup>2</sup> API directly, it is
        available in the <a href="https://svn.sourceforge.net/svnroot/carrot2/trunk/carrot2/applications/carrot2-demo-api-example/src/org/carrot2/apiexample/Example.java">source code repository</a>.
        </p>
        
        <p>If you'd rather pay for having the integration done quickly and professionally, <a href="http://www.carrot-search.com">Carrot Search</a>
        provides consulting services (paid approximately 70 USD per hour).
        </p>
      </div>
    </div>
    
    <div class="qa">
      <div class="q">How can I integrate Carrot<sup>2</sup> with my <a href="http://lucene.apache.org/">Lucene</a>-based application?</div>
      <div class="a">
        You can use Carrot<sup>2</sup>'s built-in <carrot2-api-link
        extension="/org/carrot2/input/lucene/package-summary.html">Lucene input
        component</carrot2-api-link> as shown in this well-commented
        <carrot2-source-link extension="/applications/carrot2-demo-api-example/src/org/carrot2/apiexample/LuceneExample.java">example code</carrot2-source-link> (<carrot2-api-link extension="/org/carrot2/apiexample/LuceneExample.html">JavaDoc</carrot2-api-link>).
      </div>
    </div>
    
    <div class="qa">
      <div class="q"><a style="color: black" name="running-in-eclipse">How can I run Carrot<sup>2</sup> demo browser from Eclipse?</a></div>
      <div class="a">
        To run Carrot<sup>2</sup> Demo Browser directly from Eclipse, please follow these steps:

        <ol>
          <li>
            Check out Carrot<sup>2</sup> source code from the SVN repository:

            <div class="cmd-line">
              svn co https://svn.sourceforge.net/svnroot/carrot2/trunk carrot2
            </div>
          </li>

          <li>
            <img src="img/eclipse-import.gif" style="float: right; margin-bottom: 10px" class="pic" />
            Import all Carrot2<sup>2</sup> projects into your workspace:

            <ol>
              <li>
                From the Package Explorer's context menu choose <span class="gui-label">Import...</span>
              </li>

              <li>
                In the first step of the Import wizard, choose <span
                class="gui-label">General -> Existing projects into
                Workspace</span> and click <span class="gui-label">Next</span>.
              </li>

              <li>
                In the next step of the wizard, in the <span
                class="gui-label">Select root directory</span> field provide
                the path to your local Carrot<sup>2</sup> checkout and click
                <span class="gui-label">Finish</span>.
              </li>
            </ol>
          </li>

          <li style="clear: both">
            <img src="img/eclipse-classpath-variables.gif" style="float: right; margin-bottom: 10px" class="pic" />

            The Eclipse compile process will fail because of undefined
            classpath variables: <tt>ANT_HOME</tt> and
            <tt>CARROT2_CHECKOUT_BASE</tt>. To define these variables open the
            Preferences window (<span class="gui-label">Window ->
            Preferences...</span>) and then go to (<span class="gui-label">Java
            -> Build Path -> Classpath variables</span>). Make the
            <tt>ANT_HOME</tt> variable point to your local Ant installation and
            <tt>CARROT2_CHECKOUT_BASE</tt> to your local Carrot<sup>2</sup>
            repository checkout.
          </li>

          <li style="clear: both">
            Clean all projects (<span class="gui-label">Project ->
            Clean...</span>) and let Eclipse compile everything again, this
            time without errors.
          </li>

          <li>
            <img src="img/eclipse-launch.gif" style="float: right; margin-bottom: 10px" class="pic"
            /> Run Carrot<sup>2</sup> browser using the <span
            class="gui-label">Run...</span> toolbar icon (Eclipse should have
            automatically created the appropriate launch entry during project
            import).
          </li>
        </ol>
      </div>
    </div>
  </content>
</page>
