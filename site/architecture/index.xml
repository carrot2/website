<?xml version="1.0" encoding="UTF-8"?>

<page section="architecture">
	<title>Architecture</title>

    <chapter level="1">
        <title>Architecture</title>

    <p><carrot-text/> is based on a concept of components, which communicate
       by passing objects from one to another in a pipeline.
    </p>

    <p>
    There are four types of components in Carrot<sup>2</sup>:
        <ul>
            <li><b>Input</b> - This type of component accepts user query request (wrapped
            in standard XML and passed via HTTP POST), and is in charge of producing some
            document list, which should &quot;match&quot; the query. Upon successful processing,
            the component is required to produce a valid XML result stream.
            </li>
            <li><b>Filter</b> - This type of component accepts result stream from Input, or
            Filter components, and does some processing on it. At the end of processing,
            it is required to return unchanged input stream, with perhaps intermixed custom
            tags (the result of processing). Such tags may include, for instance, alternate
            relevance ranking of results, grouping of similar documents, or other.
            </li>
            <li><b>Output</b> - Output component type is in charge of somehow presenting the
            results to the user. The results, which this component produces are not defined (it
            may produce HTML page, display a Swing applet, or write results to disk). Components
            of this type usually interact with Controllers to present processing results to the user.
            </li>
            <li><b>Controller</b> - A component, which binds all other together to form a processing stream.
            Carrot<sup>2</sup> contains a pre-written controller component, which assembles and manages
            inputs, filters and outputs.
            </li>
        </ul>
    </p>

    <p>
    A more detailed description of architecture, data exchange protocols and other elements of the
    framework is given in the <a href="/developers/index.xml">documentation</a>.
    </p>
    </chapter>
</page>